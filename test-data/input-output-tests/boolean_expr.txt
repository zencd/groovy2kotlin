class Main {
    String s
    int i
    ArrayList list
    HashMap map
    boolean b
    Boolean B
    Class anyObject

    void main() {
        anyObject && anyObject
        list && map
        b && b
        B && B
        i || i
        s || s
        s && s && s
        s && s || s
        s || s && s
        (s || s) && s
    }

    void not() {
        !anyObject
        !s
        !i
        !list && !map
    }

    void double_not() {
        !!anyObject
        !!s
        !!i
        !!list && !!map
    }
}
-----------------
$DEFAULT_IMPORTS
open class Main {
    companion object {
    }
    val s: String? = null
    val i: Int = 0
    val list: ArrayList? = null
    val map: HashMap? = null
    val b: Boolean = false
    val B: Boolean = false
    val anyObject: Class? = null

    fun main() {
        anyObject != null && anyObject != null
        (list != null && list.isNotEmpty()) && (map != null && map.isNotEmpty())
        b && b
        B && B
        i || i
        (s != null && s.length > 0) || (s != null && s.length > 0)
        ((s != null && s.length > 0) && (s != null && s.length > 0)) && (s != null && s.length > 0)
        ((s != null && s.length > 0) && (s != null && s.length > 0)) || (s != null && s.length > 0)
        (s != null && s.length > 0) || ((s != null && s.length > 0) && (s != null && s.length > 0))
        ((s != null && s.length > 0) || (s != null && s.length > 0)) && (s != null && s.length > 0)
    }

    fun not() {
        anyObject == null
        s == null || s.length == 0
        !i
        (list == null || list.isEmpty()) && (map == null || map.isEmpty())
    }

    fun double_not() {
        anyObject != null
        (s != null && s.length > 0)
        i
        (list != null && list.isNotEmpty()) && (map != null && map.isNotEmpty())
    }
}
